worker_processes 1;

events { worker_connections 1024; }

http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile        on;
  keepalive_timeout  65;

  # important pour résoudre les noms Docker
  resolver 127.0.0.11;

  server {
	listen 8080 ssl;

	server_name localhost;


	ssl_certificate     /etc/nginx/certs/cert.pem;
	ssl_certificate_key /etc/nginx/certs/key.pem;
	ssl_protocols TLSv1.2 TLSv1.3;


	add_header Cross-Origin-Opener-Policy same-origin-allow-popups;
	add_header Cross-Origin-Embedder-Policy require-corp;

	location / {
		proxy_pass http://frontend:5173;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;

		proxy_redirect off;
		proxy_intercept_errors on;
	}

	location = /index.html {
		proxy_pass https://frontend:5173/index.html;
	}

	location /api/ {
	  proxy_pass https://backend:3000;
	  proxy_http_version 1.1;
	  proxy_set_header Host $host;
	  proxy_set_header X-Real-IP $remote_addr;
	  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	  proxy_set_header X-Forwarded-Proto $scheme;
	}

	location /nginx_status {
		stub_status;
		allow all; # à restreindre en prod
	}

	# Add this new location block for WebSocket connections
	location /ws {
	  proxy_pass http://pong:4000/ws;
	  proxy_http_version 1.1;
	  proxy_set_header Upgrade $http_upgrade;
	  proxy_set_header Connection "Upgrade";
	  proxy_set_header Host $host;
	  proxy_set_header X-Real-IP $remote_addr;
	  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	  proxy_set_header X-Forwarded-Proto $scheme;
	  proxy_read_timeout 3600s;
	  proxy_send_timeout 3600s;
	}
  }
  
	server {
		listen 8082;

		location /nginx_status {
			stub_status;
			allow all;  # à restreindre en prod
		}
	}
}
