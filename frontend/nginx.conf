worker_processes auto;

events {
  worker_connections 1024;
}

http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  keepalive_timeout  65;

  # DNS Docker
  resolver 127.0.0.11 ipv6=off;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /var/log/nginx/access.log main;
  error_log  /var/log/nginx/error.log warn;

  server {
    listen 8080 ssl;
    server_name localhost;  # ✅ À adapter

    ssl_certificate     /etc/nginx/certs/cert.pem;
    ssl_certificate_key /etc/nginx/certs/key.pem;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header Referrer-Policy no-referrer-when-downgrade;

    add_header Cross-Origin-Opener-Policy same-origin-allow-popups;
    add_header Cross-Origin-Embedder-Policy require-corp;

    # Frontend
    location / {
      proxy_pass http://frontend:80;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_cache_bypass $http_upgrade;

      proxy_redirect off;
      proxy_intercept_errors on;
    }

    # API
    location /api/ {
      proxy_pass https://backend:3000;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Status page (monitoring - IP restreinte)
    location /nginx_status {
      stub_status;
      allow 127.0.0.1;       # localhost
      allow 172.18.0.0/16;   # docker network subnet (à adapter si besoin)
      deny all;
    }
  }

  # Optional HTTP redirect to HTTPS
  server {
    listen 80;
    server_name localhost;
    return 301 https://$host$request_uri;
  }

  # Monitoring port only for nginx-exporter (no SSL)
  server {
    listen 8082;
    location /nginx_status {
      stub_status;
      allow 127.0.0.1;
      allow 172.18.0.0/16;
      deny all;
    }
  }
}
